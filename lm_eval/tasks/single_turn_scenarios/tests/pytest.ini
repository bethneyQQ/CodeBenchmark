[tool:pytest]
# Pytest configuration for single_turn_scenarios tests

# Test discovery
testpaths = .
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interaction
    performance: Performance and scalability tests
    security: Security and safety tests
    slow: Tests that take a long time to run
    benchmark: Benchmark tests for performance regression detection

# Output options
addopts = 
    --strict-markers
    --strict-config
    --tb=short
    --disable-warnings
    -ra

# Minimum version
minversion = 6.0

# Test timeout (in seconds)
timeout = 300

# Coverage options
[coverage:run]
source = ../
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */.*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# HTML coverage report
[coverage:html]
directory = coverage_html

# XML coverage report
[coverage:xml]
output = coverage.xml