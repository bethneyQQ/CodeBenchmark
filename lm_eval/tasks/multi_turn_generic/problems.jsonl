{"problem_id": "task_scheduler", "title": "Task Scheduler System", "description": "Create a distributed task scheduling system that can manage and execute tasks across multiple worker nodes with priority queues and retry mechanisms.", "difficulty": "intermediate", "category": "system_design", "expected_components": ["task queue", "worker nodes", "scheduler", "retry logic", "priority handling"], "business_context": "A growing company needs to process various background tasks like sending emails, processing images, and generating reports. The system should handle task failures gracefully and prioritize urgent tasks."}
{"problem_id": "e_commerce_api", "title": "E-commerce REST API", "description": "Design and implement a RESTful API for an e-commerce platform with product catalog, shopping cart, order management, and payment processing capabilities.", "difficulty": "intermediate", "category": "web_development", "expected_components": ["product management", "cart operations", "order processing", "payment integration", "user authentication"], "business_context": "A startup wants to launch an online store and needs a robust backend API that can handle product browsing, cart management, and secure payment processing."}
{"problem_id": "real_time_chat", "title": "Real-time Chat Application", "description": "Build a real-time chat application with WebSocket support, message persistence, user presence tracking, and group chat functionality.", "difficulty": "advanced", "category": "real_time_systems", "expected_components": ["WebSocket server", "message persistence", "user management", "group chat", "presence tracking"], "business_context": "A remote team collaboration platform needs an integrated chat system where team members can communicate in real-time, create group channels, and maintain message history."}
{"problem_id": "data_pipeline", "title": "ETL Data Pipeline", "description": "Create a data pipeline that extracts data from multiple sources, transforms it according to business rules, and loads it into a data warehouse with monitoring and error handling.", "difficulty": "advanced", "category": "data_engineering", "expected_components": ["data extraction", "transformation logic", "data loading", "error handling", "monitoring"], "business_context": "A retail company needs to consolidate sales data from multiple stores and online channels into a central warehouse for business intelligence and reporting."}
{"problem_id": "file_sync_service", "title": "File Synchronization Service", "description": "Develop a file synchronization service similar to Dropbox that can sync files across multiple devices with conflict resolution and version control.", "difficulty": "advanced", "category": "distributed_systems", "expected_components": ["file monitoring", "sync algorithm", "conflict resolution", "version control", "client-server communication"], "business_context": "A document management company wants to provide seamless file synchronization across devices for their clients, ensuring data consistency and handling network interruptions gracefully."}