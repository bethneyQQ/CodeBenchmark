apiVersion: v1
kind: ConfigMap
metadata:
  name: evaluation-engine-config
  namespace: evaluation-engine
data:
  # Application Configuration
  app.yaml: |
    app:
      name: "AI Evaluation Engine"
      version: "1.0.0"
      environment: "production"
      debug: false
      
    server:
      host: "0.0.0.0"
      port: 8000
      workers: 4
      timeout: 300
      keepalive: 2
      
    database:
      host: "postgres-service"
      port: 5432
      name: "evaluation_engine"
      pool_size: 20
      max_overflow: 30
      pool_timeout: 60
      
    redis:
      host: "redis-service"
      port: 6379
      db: 0
      max_connections: 100
      
    security:
      jwt_secret_key: "${JWT_SECRET_KEY}"
      jwt_algorithm: "HS256"
      jwt_expiration: 3600
      cors_origins: ["*"]
      rate_limit_per_minute: 100
      
    evaluation:
      max_concurrent_evaluations: 10
      default_timeout: 3600
      sandbox_timeout: 300
      max_workers: 8
      result_retention_days: 30
      
    monitoring:
      metrics_enabled: true
      metrics_port: 9090
      health_check_interval: 30
      log_level: "INFO"
      
  # Model Configurations
  models.yaml: |
    model_configs:
      openai:
        api_base: "https://api.openai.com/v1"
        timeout: 60
        max_retries: 3
        rate_limit_rpm: 60
        rate_limit_tpm: 90000
        
      anthropic:
        api_base: "https://api.anthropic.com"
        timeout: 60
        max_retries: 3
        rate_limit_rpm: 50
        rate_limit_tpm: 40000
        
      dashscope:
        api_base: "https://dashscope.aliyuncs.com/api/v1"
        timeout: 60
        max_retries: 3
        rate_limit_rpm: 100
        rate_limit_tpm: 120000
        
      huggingface:
        cache_dir: "/app/cache/huggingface"
        device: "auto"
        torch_dtype: "auto"
        trust_remote_code: false
        
  # Task Configurations
  tasks.yaml: |
    task_configs:
      single_turn_scenarios:
        default_context_mode: "full_context"
        default_num_samples: 100
        timeout_per_sample: 60
        max_tokens: 2048
        
      multi_turn_scenarios:
        default_max_turns: 5
        conversation_timeout: 1800
        context_retention: true
        max_tokens_per_turn: 1024
        
      quantitative_trading:
        domain_expertise: "quantitative_finance"
        specialized_metrics: true
        financial_data_sources: ["bloomberg", "refinitiv", "alpha_architect"]
        
  # Logging Configuration
  logging.yaml: |
    version: 1
    disable_existing_loggers: false
    
    formatters:
      standard:
        format: "%(asctime)s [%(levelname)s] %(name)s: %(message)s"
      json:
        format: '{"timestamp": "%(asctime)s", "level": "%(levelname)s", "logger": "%(name)s", "message": "%(message)s"}'
        
    handlers:
      console:
        class: logging.StreamHandler
        level: INFO
        formatter: standard
        stream: ext://sys.stdout
        
      file:
        class: logging.handlers.RotatingFileHandler
        level: INFO
        formatter: json
        filename: /app/logs/evaluation-engine.log
        maxBytes: 10485760  # 10MB
        backupCount: 5
        
    loggers:
      evaluation_engine:
        level: INFO
        handlers: [console, file]
        propagate: false
        
      uvicorn:
        level: INFO
        handlers: [console]
        propagate: false
        
    root:
      level: INFO
      handlers: [console, file]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: evaluation-engine
data:
  nginx.conf: |
    upstream evaluation_engine {
        server evaluation-engine-service:8000;
    }
    
    server {
        listen 80;
        server_name _;
        
        client_max_body_size 100M;
        proxy_read_timeout 300s;
        proxy_connect_timeout 75s;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # API endpoints
        location /api/ {
            proxy_pass http://evaluation_engine;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # WebSocket endpoints
        location /ws/ {
            proxy_pass http://evaluation_engine;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Metrics endpoint (internal only)
        location /metrics {
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
            proxy_pass http://evaluation_engine;
        }
        
        # Static files
        location /static/ {
            alias /app/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Documentation
        location /docs/ {
            alias /app/docs/;
            index index.html;
        }
    }